{
	"info": {
		"_postman_id": "f216a89d-a150-431c-9508-c0ada70e9522",
		"name": "Restaurant",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28559284"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var responseBody = pm.response.json();\r",
									"pm.environment.set(\"TOKEN\", responseBody.token)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"dev.don@gmail.com\",\r\n    \"password\" : \"12345678\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/users/login",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var responseBody = pm.response.json();\r",
									"pm.environment.set(\"TOKEN\", responseBody.token)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"user.don1234@gmail.com\",\r\n    \"password\" : \"12345678\",\r\n    \"username\" : \"donzaza\",\r\n    \"phone\" : \"0650793375\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/users/register",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"users",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"TOKEN\", null)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/users/logout",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"users",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Me",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{API_URL}}/users/me",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"users",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Me",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"otp\" : \"297134\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/users/verify",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"users",
								"verify"
							]
						}
					},
					"response": []
				},
				{
					"name": "Resent OTP",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{API_URL}}/users/resent-otp",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"users",
								"resent-otp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{API_URL}}/users/680bb27800088d06ad65d43a",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"users",
								"680bb27800088d06ad65d43a"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Restaurant",
			"item": [
				{
					"name": "GetAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{API_URL}}/restaurants",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"restaurants"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetById",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{API_URL}}/restaurants/67fc05448e1515cfb2097b4a",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"restaurants",
								"67fc05448e1515cfb2097b4a"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" : \"Big Mac\",\r\n    \"type\" : \"Fast Food\",\r\n    \"address\" : \"adeaqweqwe\",\r\n    \"phone\" : \"0901011111\",\r\n    \"openTime\" : \"10.00\",\r\n    \"closeTime\" : \"16.00\",\r\n    \"maxSeats\": 20\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/restaurants",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"restaurants"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"maxCapacity\": 10\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/restaurants/67fc00f0f7a7f3357f4dbc10",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"restaurants",
								"67fc00f0f7a7f3357f4dbc10"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{API_URL}}/restaurants/67fbf74be8cb3cc8017af4ad",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"restaurants",
								"67fbf74be8cb3cc8017af4ad"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Reservation",
			"item": [
				{
					"name": "GetOwned / GetAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{API_URL}}/reservations",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"reservations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"seats\" : 12,\r\n    \"startTime\" : \"2025-05-13T18:35:00.439Z\",\r\n    \"endTime\" : \"2025-05-13T18:40:00.439Z\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/reservations/67fc05448e1515cfb2097b4a",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"reservations",
								"67fc05448e1515cfb2097b4a"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"seats\" : 7,\r\n    \"startTime\" : \"2025-05-13T18:40:00.439Z\",\r\n    \"endTime\" : \"2025-05-13T18:41:00.439Z\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/reservations/68012b7e4031e2fe683dcfae",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"reservations",
								"68012b7e4031e2fe683dcfae"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{API_URL}}/reservations/67fc05448e1515cfb2097b4a",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"reservations",
								"67fc05448e1515cfb2097b4a"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Testcase",
			"item": [
				{
					"name": "User Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var responseBody = pm.response.json();\r",
									"pm.environment.set(\"TOKEN\", responseBody.token)\r",
									"pm.environment.set(\"OTP\", responseBody.otp)\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Token is generated\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.token).to.be.a(\"string\");\r",
									"    pm.expect(jsonData.token).to.not.be.empty;\r",
									"});\r",
									"\r",
									"pm.test(\"OTP is generated\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.otp).to.be.a(\"string\");\r",
									"    pm.expect(jsonData.otp).to.not.be.empty;\r",
									"});\r",
									"\r",
									"pm.execution.setNextRequest(\"User Login\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"test.user@gmail.com\",\r\n    \"password\" : \"12345678\",\r\n    \"username\" : \"donzaza\",\r\n    \"phone\" : \"0650793375\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROD_API_URL}}/users/register",
							"host": [
								"{{PROD_API_URL}}"
							],
							"path": [
								"users",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var responseBody = pm.response.json();\r",
									"pm.environment.set(\"TOKEN\", responseBody.token)\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Token is generated\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.token).to.be.a(\"string\");\r",
									"    pm.expect(jsonData.token).to.not.be.empty;\r",
									"});\r",
									"\r",
									"pm.execution.setNextRequest(\"Verify User\")\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"test.user@gmail.com\",\r\n    \"password\" : \"12345678\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROD_API_URL}}/users/login",
							"host": [
								"{{PROD_API_URL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.execution.setNextRequest(\"User Me\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"otp\" : {{OTP}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROD_API_URL}}/users/verify",
							"host": [
								"{{PROD_API_URL}}"
							],
							"path": [
								"users",
								"verify"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Me",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"UserId\", pm.response.json()._id)\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"User role is updated to User\", function () {\r",
									"    var responseBody = pm.response.json();\r",
									"    pm.expect(responseBody.role).to.eql(\"User\");\r",
									"})\r",
									"\r",
									"pm.execution.setNextRequest(\"User View Restaurant\")\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{PROD_API_URL}}/users/me",
							"host": [
								"{{PROD_API_URL}}"
							],
							"path": [
								"users",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "User View Restaurant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var responseBody = pm.response.json();\r",
									"const restaurantId = responseBody[0]._id\r",
									"pm.environment.set(\"RestaurantId\", restaurantId)\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Restaurant is not empty\", function () {\r",
									"    var responseBody = pm.response.json();\r",
									"    pm.expect(responseBody).to.not.be.empty;\r",
									"})\r",
									"\r",
									"pm.execution.setNextRequest(\"User Create Reservation\")\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{PROD_API_URL}}/restaurants",
							"host": [
								"{{PROD_API_URL}}"
							],
							"path": [
								"restaurants"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Create Reservation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var responseBody = pm.response.json();\r",
									"const reservationId = responseBody._id\r",
									"pm.environment.set(\"ReservationId\", reservationId)\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Reservation is created\", function () {\r",
									"    pm.expect(responseBody).to.have.property(\"_id\");\r",
									"})\r",
									"\r",
									"pm.execution.setNextRequest(\"User Create Another Reservation\")\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"seats\" : 15,\r\n    \"startTime\" : \"2025-06-13T18:40:00.439Z\",\r\n    \"endTime\" : \"2025-06-13T18:45:00.439Z\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROD_API_URL}}/reservations/{{RestaurantId}}",
							"host": [
								"{{PROD_API_URL}}"
							],
							"path": [
								"reservations",
								"{{RestaurantId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Create Another Reservation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var responseBody = pm.response.json();\r",
									"const reservationId = responseBody._id\r",
									"pm.environment.set(\"ReservationId2\", reservationId)\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Reservation is created\", function () {\r",
									"    pm.expect(responseBody).to.have.property(\"_id\");\r",
									"})\r",
									"\r",
									"pm.execution.setNextRequest(\"User Create Invalid Reservation\")\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"seats\" : 1,\r\n    \"startTime\" : \"2025-06-13T18:40:00.439Z\",\r\n    \"endTime\" : \"2025-06-13T18:45:00.439Z\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROD_API_URL}}/reservations/{{RestaurantId}}",
							"host": [
								"{{PROD_API_URL}}"
							],
							"path": [
								"reservations",
								"{{RestaurantId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Create Invalid Reservation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.execution.setNextRequest(\"User GetOwned Reservation\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"seats\" : -1,\r\n    \"startTime\" : \"2025-10-20T18:41:00.439Z\",\r\n    \"endTime\" : \"2025-05-13T18:40:00.439Z\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROD_API_URL}}/reservations/{{RestaurantId}}",
							"host": [
								"{{PROD_API_URL}}"
							],
							"path": [
								"reservations",
								"{{RestaurantId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "User GetOwned Reservation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"My reservation is found\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    const myId = pm.environment.get(\"ReservationId\")\r",
									"    const myId2 = pm.environment.get(\"ReservationId2\")\r",
									"    pm.expect(jsonData).to.be.an('array')\r",
									"\r",
									"    const hasMatchingId = jsonData.some(item => item._id == myId);\r",
									"    const hasMatchingId2 = jsonData.some(item => item._id == myId2);\r",
									"    \r",
									"    pm.expect(hasMatchingId).to.be.true;\r",
									"    pm.expect(hasMatchingId2).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Only found my reservation\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).length(2)\r",
									"})\r",
									"\r",
									"pm.execution.setNextRequest(\"User Update Reservation\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{PROD_API_URL}}/reservations",
							"host": [
								"{{PROD_API_URL}}"
							],
							"path": [
								"reservations"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Update Reservation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"My reservation is updated\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"\r",
									"    const myId = pm.environment.get(\"ReservationId\")\r",
									"    pm.expect(jsonData._id).to.be.equal(myId)\r",
									"\r",
									"    pm.expect(jsonData.seats).to.be.equal(7)\r",
									"})\r",
									"\r",
									"pm.execution.setNextRequest(\"User Delete Reservation\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"seats\" : 7,\r\n    \"startTime\" : \"2025-05-13T18:40:00.439Z\",\r\n    \"endTime\" : \"2025-05-13T18:41:00.439Z\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROD_API_URL}}/reservations/{{ReservationId}}",
							"host": [
								"{{PROD_API_URL}}"
							],
							"path": [
								"reservations",
								"{{ReservationId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Delete Reservation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.execution.setNextRequest(\"User Logout\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{PROD_API_URL}}/reservations/{{ReservationId}}",
							"host": [
								"{{PROD_API_URL}}"
							],
							"path": [
								"reservations",
								"{{ReservationId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"TOKEN\", null)\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.execution.setNextRequest(\"Admin Login\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{PROD_API_URL}}/users/logout",
							"host": [
								"{{PROD_API_URL}}"
							],
							"path": [
								"users",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var responseBody = pm.response.json();\r",
									"pm.environment.set(\"TOKEN\", responseBody.token)\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Token is generated\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.token).to.be.a(\"string\");\r",
									"    pm.expect(jsonData.token).to.not.be.empty;\r",
									"});\r",
									"\r",
									"pm.execution.setNextRequest(\"Admin GetAll Reservation\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"dev.don@gmail.com\",\r\n    \"password\" : \"12345678\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROD_API_URL}}/users/login",
							"host": [
								"{{PROD_API_URL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin GetAll Reservation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"All reservation are found\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"\r",
									"    pm.expect(jsonData.length).to.be.above(1);\r",
									"})\r",
									"\r",
									"pm.test(\"User reservation is found\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    const reservationId2 = pm.environment.get(\"ReservationId2\")\r",
									"\r",
									"    pm.expect(jsonData.some(reservation => reservation._id === reservationId2)).to.be.true;\r",
									"})\r",
									"\r",
									"pm.execution.setNextRequest(\"Admin Update Reservation\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{PROD_API_URL}}/reservations",
							"host": [
								"{{PROD_API_URL}}"
							],
							"path": [
								"reservations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin Update Reservation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Target reservation is updated\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"\r",
									"    const myId = pm.environment.get(\"ReservationId2\")\r",
									"    pm.expect(jsonData._id).to.be.equal(myId)\r",
									"\r",
									"    pm.expect(jsonData.seats).to.be.equal(3)\r",
									"})\r",
									"\r",
									"pm.execution.setNextRequest(\"Admin Delete Reservation\")\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"seats\" : 3,\r\n    \"startTime\" : \"2025-05-13T18:40:00.439Z\",\r\n    \"endTime\" : \"2025-05-13T18:41:00.439Z\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROD_API_URL}}/reservations/{{ReservationId2}}",
							"host": [
								"{{PROD_API_URL}}"
							],
							"path": [
								"reservations",
								"{{ReservationId2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin Delete Reservation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.execution.setNextRequest(\"Admin Delete User\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{PROD_API_URL}}/reservations/{{ReservationId2}}",
							"host": [
								"{{PROD_API_URL}}"
							],
							"path": [
								"reservations",
								"{{ReservationId2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin Delete User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.execution.setNextRequest(\"Admin Logout\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{PROD_API_URL}}/users/{{UserId}}",
							"host": [
								"{{PROD_API_URL}}"
							],
							"path": [
								"users",
								"{{UserId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"TOKEN\", null)\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.environment.set(\"OTP\",null)\r",
									"pm.environment.set(\"UserId\", null)\r",
									"pm.environment.set(\"RestaurantId\", null)\r",
									"pm.environment.set(\"ReservationId\", null)\r",
									"pm.environment.set(\"ReservationId2\", null)\r",
									"\r",
									"pm.execution.setNextRequest(null)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{PROD_API_URL}}/users/logout",
							"host": [
								"{{PROD_API_URL}}"
							],
							"path": [
								"users",
								"logout"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}